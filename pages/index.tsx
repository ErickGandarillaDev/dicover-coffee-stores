import { useContext, useEffect, useState } from 'react';
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import { Banner } from "../components/Banner";
import Card  from "../components/card";

import { fetchCoffeeStores } from "../lib/coffee-stores";

import useTrackLocation from "../hooks/use-track-location";
import { ACTION_TYPES, StoreContext } from '../store/store-context';

export async function getStaticProps(context:any) {

    const coffeeStores = await fetchCoffeeStores();

  return{
    props:{
      coffeeStores,
    },
  }
}

const  Home = ({coffeeStores}:any) => {

  const [userCoffeeStoresError, setUserCoffeeStoresError] = useState("");

  const { handleTrackLocation, locationErrorMsg, isFindingLocation } = useTrackLocation();

  const {dispatch,state} = useContext(StoreContext);

  const {coffeeStores:userCoffeeStores, latLong} = state;

  useEffect(() =>{
    if(latLong) {

      const  fetchCofeeStoresUser = async () => {
        try {
          const res = await fetch(`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=30`);

          const coffeeStores = await res.json();
          dispatch({
            type:ACTION_TYPES.SET_COFFEE_STORES,
            payload: {
              coffeeStores: coffeeStores
            }
          })
        } catch (error){
          setUserCoffeeStoresError("Cant get stores nearby you")
        }
      }

      fetchCofeeStoresUser()
    }
  },[latLong])

  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
    <Head>
      <title>Coffee Connoisseur</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <main className={styles.main}>
      <Banner
        buttonText={isFindingLocation ? "Searching..." : "Find stores nearby"}
        handleOnClick={handleOnBannerBtnClick}
      />
      {locationErrorMsg.length > 0 && <p>Something went wrong {locationErrorMsg}</p>}
      {userCoffeeStoresError.length > 0 && <p>Something went wrong {userCoffeeStoresError}</p>}
      <div className={styles.heroImage}>
        <Image src="/static/cofee.png" width={350} height={350} />
      </div>
      <div className={styles.sectionWrapper}>
        {
          userCoffeeStores.length > 0 && 
          (<>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {
                userCoffeeStores.map((coffeeStore:any ) => (
                  <Card className={styles.card} name={coffeeStore.name} imgUrl={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"} href={`/coffee-store/${coffeeStore.fsq_id}`} key={coffeeStore.fsq_id}/>
                ))
              }
            </div>
          </>)
        }
        {
          coffeeStores.length > 0 && 
          (<>
            <h2 className={styles.heading2}>Monterrey stores</h2>
            <div className={styles.cardLayout}>
              {
                coffeeStores.map((coffeeStore:any ) => (
                  <Card className={styles.card} name={coffeeStore.name} imgUrl={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"} href={`/coffee-store/${coffeeStore.fsq_id}`} key={coffeeStore.fsq_id}/>
                ))
              }
            </div>
          </>)
        }
      </div>
    </main>
  </div>
  );
}

export default Home;